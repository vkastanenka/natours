.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, 0.1);

    // Center hamburger
    text-align: center;
    cursor: pointer;

    @include respond(tab-port) {
      top: 4rem;
      right: 4rem;
    }

    @include respond(phone) {
      top: 3rem;
      right: 3rem;
    }
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    // Similar to absolute, but doesn't change position as we scroll the page => Also takes the element out of the flow => Allows us to specify it in relation to a positioned element with top, right, bottom, left properties
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;

    // Linear gradient goes from one side to another, while the radial gradient starts in the middle of an element, while radial starts from the center and goes outwards in all directions
    background-image: radial-gradient($color-primary-light,
        $color-primary-dark);
    // z-index only works on an element whose position is defined
    z-index: 1000;
    transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);

    @include respond(tab-port) {
      top: 4.5rem;
      right: 4.5rem;
    }

    @include respond(phone) {
      top: 3.5rem;
      right: 3.5rem;
    }
  }

  &__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;

    opacity: 0;
    width: 0;
    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  &__list {
    // This center postioning is a great candidate for a mixin ^ w ^
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    // Without this, the nav list will move in weird from the side
    width: 100%;
    z-index: 10000000;
    text-align: center;
    list-style: none;
  }

  &__item {
    margin: 1rem;
  }

  &__link {

    &:link,
    &:visited {
      color: $color-white;
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(120deg,
          transparent 0%,
          transparent 50%,
          $color-white 50%);

      // Background-size will move the gradient
      background-size: 220%;
      transition: all 0.4s;
      border-radius: 10rem;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }

      &:hover,
      &:active {
        // Will cause background gradient to shift ???
        background-position: 100%;
        color: $color-primary;
        transform: translateX(1rem);
      }
    }
  }

  // FUNCTIONALITY
  &__checkbox:checked~&__background {
    transform: scale(80);
  }

  &__checkbox:checked~&__nav {
    opacity: 1;
    width: 100%;
  }

  // ICON
  &__icon {
    position: relative;
    margin-top: 3.4rem;

    &,
    &::before,
    &::after {
      width: 3rem;
      height: 0.2rem;
      background-color: $color-grey-dark-3;
      // Display property must be set for pseudo elements
      display: inline-block;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      left: 0;
      transition: all 0.2s;
    }

    &::before {
      top: -0.8rem;
    }

    &::after {
      top: 0.8rem;
    }
  }

  &__button:hover &__icon::before {
    top: -1rem;
  }

  &__button:hover &__icon::after {
    top: 1rem;
  }

  &__checkbox:checked+&__button &__icon {
    // Want lines to disappear: Don't want to change its size (this element has a size)
    // However, the after and before pseudo elements depend on this size
    // Positioned in relation to that size
    // Remove that size: Width and height of the element, would change the positions of the before and after (don't want)
    background-color: transparent;
  }

  // Rotating the before and afters into a cross
  &__checkbox:checked + &__button &__icon::before {
    top: 0;
    transform: rotate(135deg) translateY(-0.1rem);
  }

  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg);
  }
}